// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Project {
  id          String      @id @default(cuid())
  name        String      @unique
  description String?
  metadata    Json?       // Additional flexible data
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt
  
  tasks       Task[]
  references  Reference[]
  
  @@index([name])
  @@index([createdAt])
}

model Task {
  id          String    @id @default(cuid())
  projectId   String
  content     String    @db.Text
  priority    Priority  @default(MEDIUM)
  status      Status    @default(ACTIVE)
  completedAt DateTime?
  deletedAt   DateTime?
  metadata    Json?     // Additional flexible data like tags, labels, etc.
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  
  project     Project   @relation(fields: [projectId], references: [id], onDelete: Cascade)
  
  @@index([projectId, status])
  @@index([status])
  @@index([priority])
  @@index([createdAt])
}

model Reference {
  id          String    @id @default(cuid())
  projectId   String
  title       String
  content     String    @db.Text
  url         String?
  category    Category  @default(DOCUMENTATION)
  priority    Priority  @default(MEDIUM)
  tags        String[]  // PostgreSQL array support
  metadata    Json?     // Additional flexible data
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  
  project     Project   @relation(fields: [projectId], references: [id], onDelete: Cascade)
  
  @@index([projectId, category])
  @@index([category])
  @@index([tags])
}

enum Priority {
  LOW
  MEDIUM
  HIGH
  URGENT
}

enum Status {
  ACTIVE
  COMPLETED
  DELETED
}

enum Category {
  DOCUMENTATION
  SNIPPET
  CONFIGURATION
  TOOLS
  API
  TUTORIAL
  REFERENCE
}